openapi: 3.0.0
info:
  title: Medical Appointment System API
  description: API for managing doctors, appointments, and user authentication
  version: 1.0.0
servers:
  - url: http://localhost:5000/api
    description: Local development server
tags:
  - name: Authentication
    description: Authentication operations
  - name: Doctors
    description: Doctor management operations
  - name: Appointments
    description: Appointment management operations
paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                role:
                  type: string
                  enum: [patient, doctor, admin]
                  default: patient
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Bad request - invalid input data
        '409':
          description: Email already exists

  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
        '401':
          description: Invalid credentials

  /auth/me:
    get:
      tags:
        - Authentication
      summary: Get current user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
        '401':
          description: Unauthorized

  /doctors:
    get:
      tags:
        - Doctors
      summary: Get all doctors
      responses:
        '200':
          description: List of doctors
    post:
      tags:
        - Doctors
      summary: Create a new doctor
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - specialization
              properties:
                name:
                  type: string
                specialization:
                  type: string
                availableSlots:
                  type: array
                  items:
                    type: object
                    properties:
                      day:
                        type: string
                      startTime:
                        type: string
                      endTime:
                        type: string
      responses:
        '201':
          description: Doctor created successfully
        '400':
          description: Bad request - invalid input data
        '401':
          description: Unauthorized

  /doctors/{id}:
    get:
      tags:
        - Doctors
      summary: Get doctor by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Doctor details
        '404':
          description: Doctor not found
    put:
      tags:
        - Doctors
      summary: Update doctor information
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                specialization:
                  type: string
                availableSlots:
                  type: array
                  items:
                    type: object
                    properties:
                      day:
                        type: string
                      startTime:
                        type: string
                      endTime:
                        type: string
      responses:
        '200':
          description: Doctor updated successfully
        '400':
          description: Bad request - invalid input data
        '401':
          description: Unauthorized
        '404':
          description: Doctor not found
    delete:
      tags:
        - Doctors
      summary: Delete a doctor
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Doctor deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Doctor not found

  /doctors/{id}/availability:
    get:
      tags:
        - Doctors
      summary: Get doctor availability
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Doctor availability slots
        '404':
          description: Doctor not found

  /appointments:
    get:
      tags:
        - Appointments
      summary: Get all appointments
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of appointments
        '401':
          description: Unauthorized
    post:
      tags:
        - Appointments
      summary: Create a new appointment
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - doctorId
                - date
                - startTime
              properties:
                doctorId:
                  type: string
                date:
                  type: string
                  format: date
                startTime:
                  type: string
                endTime:
                  type: string
                notes:
                  type: string
      responses:
        '201':
          description: Appointment created successfully
        '400':
          description: Bad request - invalid input data
        '401':
          description: Unauthorized
        '409':
          description: Appointment slot not available

  /appointments/{id}:
    get:
      tags:
        - Appointments
      summary: Get appointment by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Appointment details
        '401':
          description: Unauthorized
        '404':
          description: Appointment not found
    put:
      tags:
        - Appointments
      summary: Update an appointment
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                doctorId:
                  type: string
                date:
                  type: string
                  format: date
                startTime:
                  type: string
                endTime:
                  type: string
                status:
                  type: string
                  enum: [scheduled, completed, cancelled]
                notes:
                  type: string
      responses:
        '200':
          description: Appointment updated successfully
        '400':
          description: Bad request - invalid input data
        '401':
          description: Unauthorized
        '404':
          description: Appointment not found
    delete:
      tags:
        - Appointments
      summary: Delete an appointment
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Appointment deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Appointment not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 